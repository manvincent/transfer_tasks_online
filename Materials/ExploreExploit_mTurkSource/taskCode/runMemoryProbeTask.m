% Initialization 
clear all;

% some initial global setup
RandStream.setGlobalStream(RandStream('mt19937ar','Seed','shuffle'));
RestrictKeysForKbCheck( [] );
Screen('Preference', 'SkipSyncTests', 1);
KbName('UnifyKeyNames');

% prompt for data path if it's not already in the environment
if (~exist('taskStruct','var'))
    [file,path] = uigetfile;
    load( fullfile(path, file) );
    clear file path;
end

taskProbeStruct = initProbeTaskStruct(taskStruct);
ioProbeStruct = initProbeIO(taskStruct, ioStruct, fullfile('.', 'images', 'memoryProbe', 'stimuli'), taskProbeStruct);
% hide input to prevent participant from over-writing into the script
HideCursor(); ListenChar(2);

% open instructions
showProbeInstructions(ioProbeStruct, fullfile('.', 'images', 'memoryProbeInstructions'));

% loop through all trials
for tI = 1:size(taskProbeStruct.allTrials, 1)
    taskProbeStruct.allTrials(tI,:) = showProbeTrial(taskProbeStruct, ioProbeStruct, taskProbeStruct.allTrials(tI,:));
    % save the data
    save(fullfile(taskStruct.outputFolder, taskStruct.fileName), 'ioStruct', 'taskStruct', 'taskProbeStruct', 'ioProbeStruct');
end

% show that we're done
% clear the screen
Screen(ioStruct.wPtr, 'Flip');
% show inter-block information
sessionEndText = 'You''re done!.\n\n Please let the experimenter know that you''ve finished';
Screen('TextSize', ioStruct.wPtr, 30);
Screen('TextColor', ioStruct.wPtr, [255 255 255]);
Screen('TextFont', ioStruct.wPtr, 'Helvetica');
DrawFormattedText(ioStruct.wPtr, sessionEndText, 'center', 'center');
% show feedback for prescribed time, then clear screen
Screen(ioStruct.wPtr, 'Flip');
RestrictKeysForKbCheck(ioProbeStruct.respKey_Proceed);
KbWait(-3,2);

% clean up
ShowCursor(); ListenChar(); sca;
    

